(module
  (type $0 (func (param f64 f64) (result i32)))
  (type $1 (func (param f64 i32) (result f64)))
  (type $2 (func (result i32)))
  (memory $0 1)
  (func $0
    (type 0)
    (local.get 0)
    (local.get 1)
    (f64.sub)
    (local.tee 0)
    (f64.const 9.999_999_999_999_999_5e-08)
    (f64.lt)
    (local.get 0)
    (f64.const -9.999_999_999_999_999_5e-08)
    (f64.gt)
    (i32.and)
  )
  (func $1
    (type 1)
    (local f64)
    (block
      (block
        (local.get 1)
        (i32.eqz)
        (br_if 0)
        (local.get 1)
        (i32.const 1)
        (i32.ne)
        (br_if 1)
        (local.get 0)
        (return)
      )
      (unreachable)
      (unreachable)
    )
    (local.get 0)
    (local.get 1)
    (i32.const 1)
    (i32.shr_u)
    (call 1)
    (local.tee 2)
    (local.get 2)
    (f64.mul)
    (local.tee 2)
    (local.get 0)
    (f64.mul)
    (local.get 2)
    (local.get 1)
    (i32.const 1)
    (i32.and)
    (select)
  )
  (func $2
    (type 1)
    (local i32)
    (local.get 0)
    (f64.const 0)
    (call 0)
    (local.set 2)
    (block
      (local.get 1)
      (i32.const -1)
      (i32.gt_s)
      (br_if 0)
      (unreachable)
      (unreachable)
      (unreachable)
      (unreachable)
      (unreachable)
      (unreachable)
      (unreachable)
      (unreachable)
    )
    (f64.const 1)
    (local.get 0)
    (local.get 1)
    (local.get 1)
    (i32.const 31)
    (i32.shr_s)
    (local.tee 2)
    (i32.add)
    (local.get 2)
    (i32.xor)
    (call 1)
    (local.tee 0)
    (f64.div)
    (local.get 0)
    (local.get 1)
    (i32.const 0)
    (i32.lt_s)
    (select)
  )
  (func $3
    (type 2)
    (f64.const 4.400_000_000_000_000_4)
    (i32.const 3)
    (call 2)
    (f64.const -85)
    (f64.add)
    (i32.trunc_f64_s)
  )
  (export "memory" (memory 0))
  (export "equal" (func 0))
  (export "power_rec" (func 1))
  (export "power" (func 2))
  (export "main" (func 3))
  (data 0 (offset (i32.const 12)) "\00\00\00\00")
)