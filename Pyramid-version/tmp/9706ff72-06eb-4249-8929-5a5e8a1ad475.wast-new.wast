(module
  (type $0 (func))
  (type $1 (func (param i32)))
  (type $2 (func (param f32)))
  (type $3 (func (result i32)))
  (type $4 (func (result f32)))
  (type $5 (func (param i32) (result i32)))
  (type $6 (func (param i64) (result i64)))
  (table $0 10 funcref)
  (memory $0 2)
  (global $0 i32 (i32.const 55))
  (global $1 f32 (f32.const 44))
  (func $0 (type 0))
  (func $1 (type 1))
  (func $2 (type 2))
  (func $3 (type 3) (unreachable))
  (func $4 (type 4) (unreachable))
  (func $5 (type 5) (unreachable))
  (func $6 (type 6) (local.get 0))
  (export "func" (func 0))
  (export "func-i32" (func 1))
  (export "func-f32" (func 2))
  (export "func->i32" (func 3))
  (export "func->f32" (func 4))
  (export "func-i32->i32" (func 5))
  (export "func-i64->i64" (func 6))
  (export "global-i32" (global 0))
  (export "global-f32" (global 1))
  (export "table-10-inf" (table 0))
  (export "memory-2-inf" (memory 0))
)
(register "test")
(module
  (type $0 (func (param i32)))
  (type $1 (func (param i64)))
  (type $2 (func (param f32)))
  (type $3 (func (param f64)))
  (type $4 (func (param i32)))
  (type $5 (func (param i32 f32)))
  (type $6 (func (param f64 f64)))
  (type $7 (func (param i64) (result i64)))
  (import "spectest" "print_i32" (func $0 (type 0)))
  (import "spectest" "print_i32" (func $1 (type 0)))
  (import "spectest" "print_f32" (func $2 (type 2)))
  (import "spectest" "print_f64" (func $3 (type 3)))
  (import "spectest" "print_i32_f32" (func $4 (type 5)))
  (import "spectest" "print_f64_f64" (func $5 (type 6)))
  (import "spectest" "print_i32" (func $6 (type 0)))
  (import "spectest" "print_f64" (func $7 (type 3)))
  (import "test" "func-i64->i64" (func $8 (type 7)))
  (import "spectest" "print_i32" (func $9 (type 0)))
  (import "spectest" "print_i32" (func $10 (type 0)))
  (import "spectest" "print_i32" (func $11 (type 0)))
  (import "spectest" "print_i32" (func $12 (type 0)))
  (import "spectest" "print_i32" (func $13 (type 0)))
  (import "spectest" "print_i32" (func $14 (type 4)))
  (import "spectest" "print_i32" (func $15 (type 4)))
  (table $0 2 2 funcref)
  (func $16
    (type 0)
    (local f32)
    (local.get 0)
    (f32.convert_i32_s)
    (local.set 1)
    (local.get 0)
    (call 0)
    (local.get 0)
    (i32.const 1)
    (i32.add)
    (f32.const 42)
    (call 4)
    (local.get 0)
    (call 1)
    (local.get 0)
    (call 6)
    (local.get 1)
    (call 2)
    (local.get 0)
    (i32.const 0)
    (call_indirect (type 0))
  )
  (func $17
    (type 1)
    (local f64)
    (local.get 0)
    (call 8)
    (f64.convert_i64_s)
    (local.set 1)
    (local.get 1)
    (f64.const 1)
    (f64.add)
    (f64.const 53)
    (call 5)
    (local.get 1)
    (call 3)
    (local.get 1)
    (call 7)
    (local.get 1)
    (i32.const 1)
    (call_indirect (type 3))
  )
  (export "p1" (func 9))
  (export "p2" (func 10))
  (export "p3" (func 11))
  (export "p4" (func 11))
  (export "p5" (func 12))
  (export "p6" (func 13))
  (export "print32" (func 16))
  (export "print64" (func 17))
  (elem 0 (offset (i32.const 0)) 1 3)
)
(assert_return (invoke "print32" (i32.const 13)))
(assert_return (invoke "print64" (i64.const 24)))
(assert_invalid
  (module
    (type $0 (func (result i32)))
    (import "test" "func" (func $0 (type 1)))
  )
  "unknown type"
)
(module (type $0 (func)) (import "test" "func" (func $0 (type 0))))
(module
  (type $0 (func (param i32)))
  (import "test" "func-i32" (func $0 (type 0)))
)
(module
  (type $0 (func (param f32)))
  (import "test" "func-f32" (func $0 (type 0)))
)
(module
  (type $0 (func (result i32)))
  (import "test" "func->i32" (func $0 (type 0)))
)
(module
  (type $0 (func (result f32)))
  (import "test" "func->f32" (func $0 (type 0)))
)
(module
  (type $0 (func (param i32) (result i32)))
  (import "test" "func-i32->i32" (func $0 (type 0)))
)
(module
  (type $0 (func (param i64) (result i64)))
  (import "test" "func-i64->i64" (func $0 (type 0)))
)
